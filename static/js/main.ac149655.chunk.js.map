{"version":3,"sources":["img/kacki.png","theme.js","components/InfoOverlay.js","components/AppHeader.js","components/GameboardCell.js","components/WinOverlay.js","components/Gameboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","name","rounding","spacing","global","colors","brand","text","background","border","control","focus","undefined","font","family","size","height","elevation","dark","none","xsmall","button","default","width","radius","padding","active","color","medium","InfoOverlay","onDismiss","Layer","animation","onClickOutside","onEsc","Box","pad","Anchor","icon","Close","onClick","Heading","textAlign","Markdown","Paragraph","Nav","direction","Facebook","href","hoverIndicator","Instagram","Twitter","Youtube","AppHeader","useState","shouldReload","setShouldReload","shouldShowInfoPopup","setShouldShowInfoPopup","useEffect","window","location","reload","Header","justify","horizontal","vertical","flex","style","zIndex","Stack","fill","anchor","gap","align","Image","src","kacki","alt","fit","level","alignSelf","Button","plain","CircleInformation","e","Cycle","WrapBox","styled","StrikeThroughText","Text","GameboardCell","row","column","isChecked","onChanged","children","wordBreak","role","aria-label","WinOverlay","newTry","margin","Gameboard","data","isWin","setIsWin","checkedValues","setCheckedValues","itemAt","values","toggleCell","currentValues","diagonalWin1","diagonalWin2","i","rowWin","columnWin","j","checkWin","Main","overflow","Grid","justifyContent","columns","map","cell","index","Math","floor","key","shuffleArray","arr","length","random","temp","App","Grommet","full","sentences","slice","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac149655.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kacki.c31d6113.png\";","const theme = {\n  name: \"K&S Theme\",\n  rounding: 0,\n  spacing: 15,\n  global: {\n    colors: {\n      brand: \"#e90014\",\n      text: \"#000000\",\n      \"text-weak\": \"#555555\",\n      background: \"brand\",\n      border: \"text\",\n      control: \"brand\",\n      focus: undefined,\n    },\n    font: {\n      family: '\"Oswald\", sans-serif',\n      size: \"15px\",\n      height: \"20px\",\n    },\n    elevation: {\n      dark: {\n        none: \"none\",\n        xsmall: \"0px 1px 2px rgba(0, 0, 0, 0.20)\",\n      },\n    },\n  },\n  button: {\n    default: {\n      border: {\n        width: \"1px\",\n        radius: \"4px\",\n      },\n      padding: \"xxsmall\",\n    },\n    active: {\n      background: {\n        color: \"#ffffff\",\n      },\n    },\n  },\n  text: {\n    medium: {\n      size: \"13px\",\n      height: \"18px\",\n    },\n  },\n};\n\nexport default theme;\n","import React from \"react\";\nimport { Layer, Box, Heading, Markdown, Paragraph, Anchor, Nav } from \"grommet\";\nimport { Close, Facebook, Instagram, Twitter, Youtube } from \"grommet-icons\";\n\nexport default function InfoOverlay({ onDismiss }) {\n  return (\n    <Layer\n      animation=\"fadeIn\"\n      onClickOutside={() => onDismiss()}\n      onEsc={() => onDismiss()}\n    >\n      <Box pad=\"medium\">\n        <Anchor icon={<Close />} onClick={() => onDismiss()} />\n        <Heading textAlign=\"center\">Kack & Sach Bingo</Heading>\n        <Markdown>\n          Dieses Bingo ist ein nicht-kommerzielles, privates Fan-Projekt mit freundlicher Unterstützung der\n          [Kack & Sachgeschichten](www.kackundsach.de). Vielen Dank für die\n          unzähligen Stunden Spaß und die Unterstützung dieses Projekts!\n        </Markdown>\n        <Paragraph>Folgt den Kackis auf Social Media:</Paragraph>\n        <Nav direction=\"row\">\n          <Anchor\n            icon={<Facebook />}\n            href=\"https://www.facebook.com/kackundsach/\"\n            hoverIndicator\n          />\n          <Anchor\n            icon={<Instagram />}\n            href=\"https://www.instagram.com/kackundsach/\"\n            hoverIndicator\n          />\n          <Anchor\n            icon={<Twitter />}\n            href=\"https://twitter.com/kackundsach\"\n            hoverIndicator\n          />\n          <Anchor\n            icon={<Youtube />}\n            href=\"https://www.youtube.com/channel/UCHVZoNOgTrt_f_OcaB24P-A\"\n            hoverIndicator\n          />\n        </Nav>\n        <Paragraph size=\"small\">Das Logo und der Name der Kack & Sachgeschichten sind eine eingetragene Marke der Hilke Hansen Aengenheyster GbR.</Paragraph>\n      </Box>\n    </Layer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Box, Header, Heading, Image, Stack } from \"grommet\";\nimport { Cycle, CircleInformation } from \"grommet-icons\";\n\nimport kacki from \"../img/kacki.png\";\nimport InfoOverlay from \"./InfoOverlay\";\n\nexport default function AppHeader() {\n  const [shouldReload, setShouldReload] = useState(false);\n  const [shouldShowInfoPopup, setShouldShowInfoPopup] = useState(false);\n\n  useEffect(() => {\n    if (shouldReload) window.location.reload();\n  }, [shouldReload]);\n\n  const showInfoPopup = () => setShouldShowInfoPopup(true);\n  const infoPopupDismissed = () => setShouldShowInfoPopup(false);\n\n  return (\n    <>\n      <Header\n        background=\"background\"\n        justify=\"center\"\n        pad={{ horizontal: \"medium\", vertical: \"xsmall\" }}\n        elevation=\"xsmall\"\n        flex={false}\n        style={{ zIndex: \"1\" }}\n      >\n        <Stack fill=\"horizontal\" anchor=\"right\">\n          <Box direction=\"row\" gap=\"small\" justify=\"center\" align=\"center\">\n            <Box height=\"xxsmall\" width=\"xxsmall\">\n              <Image src={kacki} alt=\"Kacki\" width=\"xxsmall\" fit=\"contain\" />\n            </Box>\n            <Heading level=\"3\">Bingo</Heading>\n          </Box>\n          <Box direction=\"row\" justify=\"end\" alignSelf=\"center\" gap=\"medium\">\n            <Button\n              plain\n              icon={<CircleInformation color=\"text\" />}\n              onClick={(e) => showInfoPopup()}\n            />\n            <Button\n              plain\n              icon={<Cycle color=\"text\" />}\n              onClick={(e) => setShouldReload(true)}\n            />\n          </Box>\n        </Stack>\n      </Header>\n      {shouldShowInfoPopup && <InfoOverlay onDismiss={infoPopupDismissed} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Box, Stack, Text } from \"grommet\";\n\nconst WrapBox = styled(Box)`\n  border-radius: 5px;\n`;\nconst StrikeThroughText = styled(Text)`\n  text-decoration: line-through;\n`;\n\nexport default function GameboardCell({\n  row,\n  column,\n  isChecked,\n  onChanged,\n  children,\n}) {\n  return (\n    <WrapBox\n      onClick={() => onChanged(row, column)}\n      align=\"center\"\n      justify=\"center\"\n      border={{ color: \"text\" }}\n    >\n      {isChecked ? (\n        <Stack anchor=\"center\">\n          <Box>\n            <StrikeThroughText\n              color=\"text-weak\"\n              textAlign=\"center\"\n              wordBreak=\"break-word\"\n            >\n              {children}\n            </StrikeThroughText>\n          </Box>\n          <Box>\n            <Text textAlign=\"center\" size=\"xxlarge\">\n              <span role=\"img\" aria-label=\"pile of poo\">\n                💩\n              </span>\n            </Text>\n          </Box>\n        </Stack>\n      ) : (\n        <Text textAlign=\"center\" wordBreak=\"break-word\">\n          {children}\n        </Text>\n      )}\n    </WrapBox>\n  );\n}\n","import React from \"react\";\nimport { Layer, Box, Heading, Button, Paragraph } from \"grommet\";\n\nexport default function WinOverlay() {\n  const newTry = () => {\n    window.location.reload();\n  };\n  return (\n    <Layer\n      animation=\"fadeIn\"\n      onClickOutside={() => newTry()}\n      onEsc={() => newTry()}\n    >\n      <Box pad=\"medium\">\n        <Heading textAlign=\"center\">Bingo!</Heading>\n        <Paragraph>\n          Schnell! Drück auf Pause bei der Folge, schreib dir die Zeit auf und\n          mess dich mit deinen Freunden!\n        </Paragraph>\n        <Button margin={{ vertical: \"medium\" }} onClick={() => newTry()}>\n          Neuen Versuch starten\n        </Button>\n      </Box>\n    </Layer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Grid, Main } from \"grommet\";\n\nimport GameboardCell from \"./GameboardCell\";\nimport WinOverlay from \"./WinOverlay\";\n\nexport default function Gameboard({ data }) {\n  const [isWin, setIsWin] = useState(false);\n  const [checkedValues, setCheckedValues] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n\n  const itemAt = (values, row, column) => {\n    return values[column + 5 * row];\n  };\n\n  const checkWin = (values) => {\n    let isWin = false;\n    // Check all rows and columns plus the two diagonals\n    // Use true as the start value, since we are using\n    // &= below, which turns it to false as soon as there\n    // is one false value\n    let diagonalWin1 = true;\n    let diagonalWin2 = true;\n    for (let i = 0; i < 5; i++) {\n      diagonalWin1 &= itemAt(values, i, i);\n      diagonalWin2 &= itemAt(values, 4 - i, i);\n\n      let rowWin = true;\n      let columnWin = true;\n      for (let j = 0; j < 5; j++) {\n        rowWin &= itemAt(values, i, j);\n        columnWin &= itemAt(values, j, i);\n      }\n      if (rowWin || columnWin) {\n        isWin = true;\n        break;\n      }\n    }\n\n    if (diagonalWin1 || diagonalWin2) isWin = true;\n\n    return isWin;\n  };\n\n  const toggleCell = (row, column) => {\n    let currentValues = [...checkedValues];\n    currentValues[column + 5 * row] = !currentValues[column + 5 * row];\n    if (checkWin(currentValues)) {\n      setIsWin(true);\n    }\n    setCheckedValues(currentValues);\n  };\n\n  return (\n    <Main\n      overflow=\"auto\"\n      align=\"center\"\n      flex={true}\n      pad={{ vertical: \"small\", horizontal: \"xsmall\" }}\n    >\n      {isWin && <WinOverlay />}\n      <Grid\n        justifyContent=\"stretch\"\n        fill=\"vertical\"\n        columns={[\n          [\"xxsmall\", \"medium\"],\n          [\"xxsmall\", \"medium\"],\n          [\"xxsmall\", \"medium\"],\n          [\"xxsmall\", \"medium\"],\n          [\"xxsmall\", \"medium\"],\n        ]}\n        gap=\"small\"\n      >\n        {data.map((cell, index) => {\n          return (\n            <GameboardCell\n              row={Math.floor(index / 5)}\n              column={index % 5}\n              key={index}\n              onChanged={toggleCell}\n              isChecked={checkedValues[index]}\n            >\n              {cell}\n            </GameboardCell>\n          );\n        })}\n      </Grid>\n    </Main>\n  );\n}\n","import React from \"react\";\nimport { Grommet, Box } from \"grommet\";\n\nimport theme from \"./theme\";\nimport data from \"./sentences.json\";\n\nimport AppHeader from \"./components/AppHeader\";\nimport Gameboard from \"./components/Gameboard\";\n\nfunction shuffleArray(arr) {\n  for (var i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * i);\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n  return arr;\n}\n\nfunction App() {\n  return (\n    <Grommet theme={theme} full>\n      <Box fill>\n        <AppHeader />\n        <Gameboard data={shuffleArray(data.sentences).slice(0, 25)} />\n      </Box>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}